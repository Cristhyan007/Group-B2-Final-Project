Function main
    Call task2io
TOP:
    Call task2
    GoTo TOP
Fend

' Secondary function: task2io
' Controls the execution of the task based on the button states.
Function task2io
    Motor On            ' Turns on the motor
    Power High          ' Sets power to high
    Speed 50            ' Sets speed to 50
    Accel 50, 50        ' Sets acceleration to 50 on both axes
    SpeedS 500          ' Sets secondary speed to 500
    AccelS 5000         ' Sets secondary acceleration to 5000
  
    ' Main loop: runs continuously while the program is running.
    Do While 1
        ' Waits until the green button (Sw(0)) is pressed to start the task.
        Wait Sw(0) = On

        ' Executes the main task.
        Xqt task2

        ' Controls actions while the green button is active.
        Do While Sw(0) = On
            ' Red button (Sw(4)): Stops the task.
            If Sw(4) = On Then
                Halt task2
            EndIf

            ' Blue button (Sw(6)): Resumes the task if it was stopped.
            If Sw(6) = On Then
                Resume task2
            EndIf

            ' Orange button (Sw(3)): Resets the robot to Home Position.
            If Sw(3) = On Then
                Halt task2       ' Stops the task before resetting.
                Off 8
                Home             ' Sends the robot to the initial position.
                Wait 1           ' Pauses for a moment to avoid conflicts.
            EndIf

            ' White button (Sw(2)): Sends the robot to the origin of the task.
            If Sw(2) = On Then
                Halt task2       ' Stops the task before returning.
               Go P1 +Z(50)   ' Returns to the origin of the task.
                Wait 1           ' Pauses for a moment.
            EndIf
        Loop
        ' Completely ends the task when Sw(0) is deactivated.
        Quit task2

        ' Turns off the start switch to avoid accidental reactivations.
        Off 0
    Loop
Fend

' Secondary function: task2
' Handles the manipulation and stacking of objects.
Function task2
'squere p1
'circule p2
'Staking point p0

	Go P10
'collect the square p1'
   Go P1 +Z(25)
   Go P1
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
  Go P0 +Z(120)
   Go P0
  Off 8
   Go P0 +Z(120)
  
  'collect the circule p2'
   Go P2 +Z(25)
   Go P2
  On 8
   Go P2 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(6)
  Off 8
   Go P0 +Z(120)
  
  'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(6)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(12)
  Off 8
   Go P0 +Z(120)
  
  'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(6)
  On 8
   Go P2 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(18)
  Off 8
   Go P0 +Z(120)
  
  'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(12)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(24)
  Off 8
   Go P0 +Z(120)
  
   'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(12)
  On 8
   Go P2 +Z(25)

   ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(30)
  Off 8
   Go P0 +Z(120)
  
   'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(18)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(36)
  Off 8
   Go P0 +Z(120)
  
   'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(18)
  On 8
   Go P2 +Z(25)
  
   ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(42)
  Off 8
   Go P0 +Z(120)
  
  'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(24)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(48)
  Off 8
   Go P0 +Z(120)
  
  'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(24)
  On 8
   Go P2 +Z(25)
  
   ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(54)
  Off 8
   Go P0 +Z(120)
  
   'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(30)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(60)
  Off 8
   Go P0 +Z(120)
  
  'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(30)
  On 8
   Go P2 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(66)
  Off 8
   Go P0 +Z(120)
  
   'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(36)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(72)
  Off 8
   Go P0 +Z(120)
  
   'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(36)
  On 8
   Go P2 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(78)
  Off 8
   Go P0 +Z(120)
  
   'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(42)
  On 8
   Go P1 +Z(25)
  
   ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(84)
  Off 8
   Go P0 +Z(120)
  
  'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(42)
  On 8
   Go P2 +Z(25)
  
  
   ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(90)
  Off 8
   Go P0 +Z(120)
  
   'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(48)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(120)
   Go P0 +Z(96)
  Off 8
   Go P0 +Z(120)
  
   'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(48)
  On 8
   Go P2 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(130)
   Go P0 +Z(102)
  Off 8
   Go P0 +Z(130)
  
   'collect the square p1'
   Go P1 +Z(25)
   Go P1 -Z(54)
  On 8
   Go P1 +Z(25)
  
  ' go  to the staking point p0'
   Go P0 +Z(130)
   Go P0 +Z(108)
  Off 8
   Go P0 +Z(130)
  
 
   'collect the circule p2'
   Go P2 +Z(25)
   Go P2 -Z(54)
  On 8
   Go P2 +Z(25)
  
   ' go  to the staking point p0'
   Go P0 +Z(130)
   Go P0 +Z(114)
  Off 8
   Go P0 +Z(130)
    ' Regresar a la posicii??n inicial
    Go P10
Fend



